--- a/net/bridge/br_forward.c
+++ b/net/bridge/br_forward.c
@@ -24,11 +24,29 @@ static inline int should_deliver(const s
 	struct net_bridge_vlan_group *vg;
 
 	vg = nbp_vlan_group_rcu(p);
-	return (((p->flags & BR_HAIRPIN_MODE) && !is_multicast_ether_addr(eth_hdr(skb)->h_dest))
-		|| skb->dev != p->dev) &&
-		(br_mst_is_enabled(p->br) || p->state == BR_STATE_FORWARDING) &&
-		br_allowed_egress(vg, skb) && nbp_switchdev_allowed_egress(p, skb) &&
-		!br_skb_isolated(p, skb);
+
+	if ((skb->dev != p->dev) &&
+	    br_allowed_egress(vg, skb) && p->state == BR_STATE_FORWARDING &&
+	    nbp_switchdev_allowed_egress(p, skb) &&
+	    !br_skb_isolated(p, skb)) {
+		return true;
+	}
+
+	if ((skb->dev == p->dev) &&
+	    (p->flags & BR_HAIRPIN_MODE) &&
+	    br_allowed_egress(vg, skb) && p->state == BR_STATE_FORWARDING) {
+
+		/* Allow hairpin only on WLAN netdevices.
+		 * For ethernet interfaces, hairpin not allowed
+		 * due to issue with switchdevs. */
+		if ( skb->dev->ieee80211_ptr == NULL) {
+			return false;
+		}
+
+		return true;
+	}
+
+	return false;
 }
 
 int br_dev_queue_push_xmit(struct net *net, struct sock *sk, struct sk_buff *skb)
